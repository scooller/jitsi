# Jitsi Meet Apache Configuration - Force Proxy Override

# Load required modules
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
LoadModule headers_module modules/mod_headers.so
LoadModule rewrite_module modules/mod_rewrite.so

# Global proxy settings
ProxyRequests Off
ProxyPreserveHost On
ProxyTimeout 300

# HTTP Virtual Host for redirects and Let's Encrypt
<VirtualHost 198.12.251.248:80>
    ServerName meet.scooller.work.gd
    ServerAlias www.meet.scooller.work.gd
    
    # Allow Let's Encrypt challenges
    <LocationMatch "^/\.well-known/(.*)">
        ProxyPass !
    </LocationMatch>
    
    # Redirect all other HTTP to HTTPS
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/\.well-known/
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
</VirtualHost>

# HTTPS Virtual Host for Jitsi - Use specific IP to override cPanel
<VirtualHost 198.12.251.248:443>
    ServerName meet.scooller.work.gd
    ServerAlias www.meet.scooller.work.gd
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /var/cpanel/ssl/apache_tls/meet.scooller.work.gd/combined
    SSLCertificateKeyFile /var/cpanel/ssl/apache_tls/meet.scooller.work.gd/combined
      # Completely disable file system access
    DocumentRoot /dev/null
    <Directory "/dev/null">
        AllowOverride None
        Require all denied
    </Directory>
    
    # Enable FollowSymLinks for RewriteRule to work
    <Directory "/">
        Options +FollowSymLinks
        AllowOverride None
    </Directory>
    
    # Disable any directory options
    Options -Indexes
    
    # Exception for Let's Encrypt (highest priority - must come first)
    <LocationMatch "^/\.well-known/(.*)">
        ProxyPass !
    </LocationMatch>
      # BOSH endpoint (high priority - specific endpoint)
    <Location "/http-bind">
        ProxyPass http://127.0.0.1:5280/http-bind
        ProxyPassReverse http://127.0.0.1:5280/http-bind
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Header always set Access-Control-Allow-Headers "Content-Type, Authorization"
    </Location>
    
    # WebSocket support for XMPP - Configuración específica para WHM/HTTPS
    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteCond %{REQUEST_URI} ^/xmpp-websocket [NC]
    RewriteRule ^/xmpp-websocket(.*) ws://127.0.0.1:5280/xmpp-websocket$1 [P,L]
    <Location "/xmpp-websocket">
        ProxyPass ws://127.0.0.1:5280/xmpp-websocket
        ProxyPassReverse ws://127.0.0.1:5280/xmpp-websocket
        ProxyPreserveHost On
        # Headers necesarios para WebSocket
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Header always set Access-Control-Allow-Headers "Content-Type, Sec-WebSocket-Key, Sec-WebSocket-Version, Sec-WebSocket-Protocol, Upgrade, Connection"
    </Location>    
    # Default proxy for all other requests (lowest priority)
    <Location "/">
        ProxyPass http://127.0.0.1:8081/
        ProxyPassReverse http://127.0.0.1:8081/
        ProxyPreserveHost On
        # Security headers
        Header always set X-Frame-Options "SAMEORIGIN"
        Header always set X-Content-Type-Options "nosniff"
        Header always set Referrer-Policy "strict-origin-when-cross-origin"
    </Location>
    
    # Security headers
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-Content-Type-Options nosniff
    
    ErrorLog logs/jitsi-meet.error.log
    CustomLog logs/jitsi-meet.access.log combined
</VirtualHost>