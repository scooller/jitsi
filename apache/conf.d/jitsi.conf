# Jitsi Meet Apache Virtual Host Configuration
# This configuration handles both HTTP and HTTPS traffic

# HTTP Virtual Host - Redirect to HTTPS
<VirtualHost *:80>
    ServerName ${JITSI_DOMAIN}
    ServerAlias www.${JITSI_DOMAIN}
    
    # Document root for Let's Encrypt challenges
    DocumentRoot /var/www/certbot
    
    # Allow Let's Encrypt challenges
    <Location /.well-known/acme-challenge/>
        ProxyPass !
        Require all granted
    </Location>
    
    # Redirect all other traffic to HTTPS
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/\.well-known/acme-challenge/
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
    
    # Logging
    ErrorLog logs/jitsi_error.log
    CustomLog logs/jitsi_access.log combined
</VirtualHost>

# HTTPS Virtual Host - Main Jitsi Configuration
<VirtualHost *:443>
    ServerName ${JITSI_DOMAIN}
    ServerAlias www.${JITSI_DOMAIN}
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/live/${JITSI_DOMAIN}/fullchain.pem
    SSLCertificateKeyFile /etc/ssl/certs/live/${JITSI_DOMAIN}/privkey.pem
    
    # Security Headers
    Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: wss: https:; img-src 'self' data: blob: https:; media-src 'self' data: blob: https:; connect-src 'self' wss: https:;"
    
    # Remove server signature from headers
    Header always unset Server
    Header always set Server "Jitsi Meet Server"
    
    # Proxy Configuration for Jitsi Web
    ProxyPreserveHost On
    ProxyRequests Off
    
    # Main Jitsi Meet application
    ProxyPass / http://web:80/
    ProxyPassReverse / http://web:80/
    
    # WebSocket support for XMPP
    ProxyPass /xmpp-websocket ws://web:80/xmpp-websocket
    ProxyPassReverse /xmpp-websocket ws://web:80/xmpp-websocket
    
    # Colibri WebSocket (JVB)
    ProxyPass /colibri-ws/ ws://jvb:9090/colibri-ws/
    ProxyPassReverse /colibri-ws/ ws://jvb:9090/colibri-ws/
    
    # HTTP API endpoints
    ProxyPass /http-bind http://prosody:5280/http-bind
    ProxyPassReverse /http-bind http://prosody:5280/http-bind
    
    # Handle BOSH requests
    <Location "/http-bind">
        ProxyPass http://prosody:5280/http-bind
        ProxyPassReverse http://prosody:5280/http-bind
        ProxyPreserveHost On
        
        # CORS headers for BOSH
        Header always set Access-Control-Allow-Origin "*"
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Header always set Access-Control-Allow-Headers "Content-Type, Authorization"
        Header always set Access-Control-Max-Age "86400"
    </Location>
    
    # Rate limiting for API endpoints (basic protection)
    <LocationMatch "/(http-bind|xmpp-websocket)">
        # Add rate limiting if mod_limitipconn is available
        # LimitIPConnections 20
    </LocationMatch>
    
    # Static file optimization
    <LocationMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
        ExpiresActive On
        ExpiresDefault "access plus 1 year"
        Header append Cache-Control "public, immutable"
    </LocationMatch>
    
    # Disable caching for HTML files
    <LocationMatch "\.html$">
        ExpiresActive On
        ExpiresDefault "access plus 0 seconds"
        Header set Cache-Control "no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
    </LocationMatch>
    
    # Security for sensitive files
    <Files ~ "\.(env|log|ini|conf|bak|old|tmp)$">
        Require all denied
    </Files>
    
    # Block access to hidden files and directories
    <DirectoryMatch "^\.|\/\.">
        Require all denied
    </DirectoryMatch>
    
    # Custom error pages (optional)
    # ErrorDocument 404 /404.html
    # ErrorDocument 500 /500.html
    
    # Logging
    ErrorLog logs/jitsi_ssl_error.log
    CustomLog logs/jitsi_ssl_access.log combined
    
    # Log SSL information
    CustomLog logs/jitsi_ssl_request.log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
</VirtualHost>

# Optional: Additional security configurations
<IfModule mod_security2.c>
    # Enable ModSecurity if available
    SecRuleEngine On
    SecRequestBodyAccess On
    SecResponseBodyAccess On
    SecResponseBodyMimeType text/plain text/html text/xml application/json
</IfModule>

# Deflate/Gzip compression for better performance
<IfModule mod_deflate.c>
    <LocationMatch "\.(css|js|html|xml|txt|json)$">
        SetOutputFilter DEFLATE
        SetEnvIfNoCase Request_URI "\.(?:gif|jpe?g|png)$" no-gzip dont-vary
        SetEnvIfNoCase Request_URI "\.(?:exe|t?gz|zip|bz2|sit|rar)$" no-gzip dont-vary
    </LocationMatch>
</IfModul
